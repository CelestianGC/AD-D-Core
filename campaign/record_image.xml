<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
  <template name="sub_record_header_image">
	<sub_record_header_image_step>
		<bounds>21,23,-27,40</bounds>
	</sub_record_header_image_step>
  </template>
  <template name="sub_record_toolbar_image">
	<sub_record_toolbar_image_step>
		<bounds>21,63,-27,36</bounds>
	</sub_record_toolbar_image_step>
  </template>
  <template name="image_record">
    <image_record_step>
      <bounds>21,63,-27,-29</bounds>
      <script file="campaign/scripts/image_record.lua" merge="replace" />
    </image_record_step>
  </template>
    
  <windowclass name="imagewindow_header" merge="join">
    <sheetdata>
      <button_record_isidentified name="isidentified">
        <anchored>
          <right offset="-15" />
        </anchored>
        <gmvisibleonly />
      </button_record_isidentified>
      <string_record_name_image name="name">
        <anchored>
          <right offset="-15" />
        </anchored>
      </string_record_name_image>
    </sheetdata>
  </windowclass>
  
  <windowclass name="imagewindow_toolbar" merge="join">
    <margins control="2,2,2,0" />
    <script>
      function update()
        super.update()
        if User.isHost() then
          local bShowGridToolbar = false
          if toggle_grid.getValue() &gt; 0 then
            bShowGridToolbar = super.getImage().hasGrid()
          end
          scale.setVisible(bShowGridToolbar)
        end
      end
    </script>
    <sheetdata>
      <stringfield name="scale">
        <anchored to="toolbar_anchor" width="34" height="34">
          <top />
          <left anchor="right" relation="relative" />
        </anchored>
        <frame name="toolbar_30" />
        <tooltip textres="image_tooltip_toolscale" />
        <font>sheettext</font>
        <invisible />
        <nodrag />
        <center/>
        <script>
          local sDefault = '10ft'
          function onInit()
            registerMenuItem(Interface.getString("image_menu_scale_reset"), "erase", 3)
            if not getValue() or getValue() == "" then
              setValue(sDefault)
            end
            updateState()
          end
          function onMenuSelection(nOption)
            if nOption == 3 then
              setValue(sDefault)
            end
          end
          function onClickDown(nButton, x, y)
            if nButton == 2 then
              setValue(sDefault)
              return true
            end
          end
          function onValueChanged()
            updateState()
          end
          function updateState()
            setColor(isValid() and "000000" or "FF0000")
          end
          function isValid()
            return getValue():find("^%d") ~= nil
          end
          function getScaleValue()
            return isValid() and tonumber(getValue():match("^(%d+)")) or 0
          end
          function getScaleLabel()
            return StringManager.trim(getValue():gsub("^%d+%s*", ""))
          end
        </script>
      </stringfield>
    </sheetdata>
  </windowclass>
    
</root>
